
; Yay the syntax is getting parsed correctly!

; type Years = Int

; UniqueType( 'Years', <Int> )
data Years = Int

; UniqueType( 'User', box Structure( [ 'name', 'age' ]
;                                  , [ <String>, <Int> ] ) )

data User =
  name : String,
  age  : Int

; UniqueType( 'FamilyMember', box Structure( [ 'name', 'age' ]
;                                          , [ <String>, <Int> ] ) )
data FamilyMember = 
  name : String,
  age  : Int

def id x : Years -> Years = x

; Defined in the runtime
def print_int x : Int -> ()

; A function that returns a function
def wowser x y : Int Int -> Int = 0

def super_wowser x : Int -> ( Int Int -> Int ) = 
  wowser

def test_overapplication : Int = 
  wowser 0 3 ; Should compile and return 3
             ; It should be treated as: 
             ;   (wowser 0) 3

def main : () =
  print_int ( super_wowser 1 0 0  )

